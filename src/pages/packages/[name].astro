---
import type { GetStaticPaths, MarkdownInstance } from "astro";
import Breadcrumbs from "~/components/Breadcrumbs.astro";
import Head1 from "~/components/Head1.astro";
import PackageSidePane from "~/components/PackageSidePane.astro";
import Prose from "~/components/Prose.astro";
import Layout from "~/layouts/CenterLayout.astro";
import { fetchLicenseData, findLicense } from "~/utils/license";
import { findLatestPackage, getAllPackages, getDeprecatorPackages, type VPMPackage, type VPMRepository } from "~/utils/vpm";

export const getStaticPaths = (async () => {
  const allRepos: VPMRepository[] = await Astro.glob("~/../vpm/repos/*.json");
  const allPackages = getAllPackages(allRepos);
  const names = Array.from(new Set(allPackages.map(pkg => pkg.name)));
  let contents: MarkdownInstance<Record<string, any>>[];
  try {
    contents = await Astro.glob("~/../vpm/packages/*/README.md");
  } catch (e) {
    console.warn(e);
    contents = [];
  }
  const licenses = await fetchLicenseData();

  return names.map(name => {
    const pkg = findLatestPackage(allPackages.filter(p => p.name === name)) as VPMPackage;
    const readme = contents.find(c => c.file.includes(pkg.name));
    const license = pkg.license ? findLicense(pkg.license, licenses) : undefined;
    return {
      params: {
        name: name
      },
      props: {
        pkg: pkg,
        readme: readme,
        license: license,
      }}
  });
}) satisfies GetStaticPaths;

const {pkg, license} = Astro.props;
const {Content} = Astro.props.readme ?? { Content: undefined };

const allRepos: VPMRepository[] = await Astro.glob("~/../vpm/repos/*.json");

---
<Layout title={pkg.displayName}>
  <Breadcrumbs items={[
    {label: "Home", href: "/"},
    {label: "Packages", href: "/packages"},
    {label: pkg.displayName}
  ]}/>
  <div class="flex md:flex-row flex-col">
    <div class="flex-grow md:pr-4">
      {
        Content
          ? <Prose><Content /></Prose>
          : <div>
              <Head1>{pkg.displayName}</Head1>
              <p class="mt-4 text-lg">{pkg.description}</p>
          </div>
      }
    </div>
    <div class="divider md:divider-horizontal mt-8"/>
    <div class="w-72 flex-shrink-0 md:pl-4">
      <PackageSidePane pkg={pkg} license={license} />
    </div>
  </div>
</Layout>
